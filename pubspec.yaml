name: malf
description: Malf application
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.2.3+11

environment:
  sdk: '>=3.1.2 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  image_picker: ^1.0.4
  dio: ^5.3.3
  go_router: ^11.0.0
  logger: ^2.0.2
  flutter_sliding_up_panel: ^2.1.1
  carousel_slider: ^4.2.1
  table_calendar: ^3.0.9
  easy_localization: ^3.0.3
  freezed_annotation: ^2.4.1
  json_annotation: ^4.8.1
  intl: ^0.18.1
  webview_flutter: ^4.2.4
  provider: ^6.0.5
  cached_network_image: ^3.3.0
  extended_image: ^8.1.1
  flag: ^7.0.0
  country_code: ^1.0.0
  rounded_background_text: ^0.4.3
  isar_flutter_libs: ^3.1.0+1
  isar: ^3.1.0+1
  like_button: ^2.0.5
  smooth_page_indicator: ^1.1.0
  card_swiper: ^3.0.1
  flutter_image_compress: ^2.0.4
  flutter_native_splash: ^2.3.3
  day_night_time_picker: ^1.3.0+1
  flutter_hooks: ^0.20.2
  path_provider: ^2.1.1
  url_launcher: ^6.1.14
  jwt_decode: ^0.3.1
  adaptive_dialog: ^1.9.0+2
  http: ^1.1.0
  auto_size_text: ^3.0.0
  socket_io_client: ^2.0.3+1
  flutter_keyboard_visibility: ^5.4.1
  flutter_chat_bubble: ^2.0.2
  permission_handler: ^11.0.1
  fl_country_code_picker: ^0.1.6+1
  cupertino_icons: ^1.0.6
  infinite_scroll_pagination: ^4.0.0
  loading_animation_widget: ^1.2.0+4
  upgrader: ^8.2.0
  shorebird_code_push: ^1.1.3
  webview_flutter_wkwebview: ^3.9.2
  webview_flutter_android: ^3.12.0
  random_name_generator: ^1.2.0
  restart_app: ^1.2.1


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  isar_generator: ^3.1.0+1

  build_runner: ^2.4.6
  json_serializable: ^6.7.1
  freezed: ^2.4.1
  flutter_launcher_icons: "^0.13.1"
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

flutter_native_splash:
  color: "#ffffff"
  image: assets/launcher_icon/launcher_icon.png

flutter_launcher_icons:
  android: true
  fullscreen: true
  ios: true
  image_path: "assets/launcher_icon/launcher_icon.png"
  min_sdk_android: 21 # android min sdk min:16, default 21



  
# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/logos/
    - assets/images/
    - assets/images/country_images/
    - assets/launcher_icon/
    - assets/fonts/
    - assets/icons/
    - assets/translations/
    - shorebird.yaml
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
   - family: Pretendard
     fonts:
       - asset: assets/fonts/PretendardJP-Thin.otf
         weight: 100
       - asset: assets/fonts/PretendardJP-ExtraLight.otf
         weight: 200
       - asset: assets/fonts/PretendardJP-Light.otf
         weight: 300
       - asset: assets/fonts/PretendardJP-Regular.otf
         weight: 400
       - asset: assets/fonts/PretendardJP-Medium.otf
         weight: 500
       - asset: assets/fonts/PretendardJP-SemiBold.otf
         weight: 600
       - asset: assets/fonts/PretendardJP-Bold.otf
         weight: 700
       - asset: assets/fonts/PretendardJP-ExtraBold.otf
         weight: 800
       - asset: assets/fonts/PretendardJP-Black.otf
         weight: 900

  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
